CREATE TABLE USER
(
    USER_ID  BIGINT AUTO_INCREMENT PRIMARY KEY,
    ACCOUNTS VARCHAR(30) NOT NULL
);
CREATE TABLE COUPON
(
    COUPON_ID          BIGINT AUTO_INCREMENT PRIMARY KEY,
    COUPON_NAME        VARCHAR(100) NOT NULL,
    EXPIRATION_DATE    DATE        NOT NULL,
    ISSUABLE_QUANTITY  INT         NOT NULL, -- 발급 가능한 쿠폰 수량
    REMAINING_QUANTITY INT         NOT NULL, -- 남은 쿠폰 수량
    DISCOUNT_RATE      DECIMAL(5, 2)
);
CREATE TABLE MAP_USER_COUPON
(
    USER_ID            BIGINT NOT NULL,
    COUPON_ID          BIGINT NOT NULL,
    COUPON_STATE       VARCHAR(20) NOT NULL, -- ACTIVE, USED, EXPIRED
    PRIMARY KEY (USER_ID, COUPON_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID),
    FOREIGN KEY (COUPON_ID) REFERENCES COUPONS (COUPON_ID)
);
CREATE TABLE ORDER
(
    ORDER_ID        BIGINT AUTO_INCREMENT PRIMARY KEY,
    USER_ID         BIGINT      NOT NULL,
    ORDER_STATUS    VARCHAR(20) NOT NULL, -- PENDING, COMPLETED, CANCELED
    TOTAL_AMOUNT    BIGINT      NOT NULL, -- 총 주문 금액
    DISCOUNT_AMOUNT BIGINT      NOT NULL, -- 할인 금액
    PAID_AMOUNT     BIGINT      NOT NULL, -- 결제 금액
    CREATED_AT      TIMESTAMP   NOT NULL,
    UPDATED_AT      TIMESTAMP   NOT NULL
);
CREATE TABLE ORDER_ITEM
(
    ORDER_ITEM_ID  BIGINT AUTO_INCREMENT PRIMARY KEY,
    ORDER_ID       BIGINT       NOT NULL,
    USER_ID        BIGINT       NOT NULL,
    PRODUCT_NAME   VARCHAR(255) NOT NULL,
    PRODUCT_AMOUNT BIGINT       NOT NULL,
    ORDER_QUANTITY INT          NOT NULL,
    PRODUCT_ID     BIGINT       NOT NULL,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID)
);
CREATE TABLE PAYMENT_HISTORY
(
    PAYMENT_HISTORY_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
    USER_ID            BIGINT      NOT NULL,
    AMOUNT             BIGINT      NOT NULL,
    DISCOUNT_AMOUNT    BIGINT      NOT NULL,
    COUPON_ID          BIGINT,
    PAYMENT_STATUS     VARCHAR(20) NOT NULL, -- SUCCESS, CANCELED
    CREATED_AT         TIMESTAMP   NOT NULL,
    UPDATED_AT         TIMESTAMP   NOT NULL
);
CREATE TABLE PRODUCT
(
    PRODUCT_ID    BIGINT AUTO_INCREMENT PRIMARY KEY,
    NAME          VARCHAR(255) NOT NULL,
    DESCRIPTION   TEXT         NOT NULL,
    CATEGORY      VARCHAR(20)  NOT NULL, --
    PRICE         BIGINT       NOT NULL,
    CREATED_AT    TIMESTAMP    NOT NULL,
    UPDATED_AT    TIMESTAMP    NOT NULL,
    QUANTITY      INT          NOT NULL,
    PRODUCT_STATE        VARCHAR(20)  NOT NULL  -- AVAILABLE, SOLD_OUT
);
CREATE TABLE POINT
(
    POINT_ID     BIGINT AUTO_INCREMENT PRIMARY KEY,
    BALANCE      BIGINT NOT NULL,
    USER_ID      BIGINT NOT NULL
);
CREATE TABLE POINT_HISTORY
(
    POINT_HISTORY_ID     BIGINT AUTO_INCREMENT PRIMARY KEY,
    USER_ID              BIGINT      NOT NULL,
    POINT_ID             BIGINT      NOT NULL,
    AMOUNT               BIGINT      NOT NULL,
    TRANSACTION_TYPE     VARCHAR(20) NOT NULL, -- DEPOSIT, WITHDRAW
    CREATED_AT           TIMESTAMP   NOT NULL,
    UPDATED_AT           TIMESTAMP   NOT NULL,
    FOREIGN KEY (POINT_ID) REFERENCES POINT (POINT_ID)
);